const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');

const app = express();

app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static('public')); // Serve static files (like HTML, CSS, etc.) from the "public" directory

app.use((req, res, next) => {
  console.log(`[${new Date().toISOString()}] ${req.method} ${req.url}`);
  next();
});

app.use((req, res, next) => {
  console.log('Dummy Authentication Middleware');

  // Check if the username is already stored in local storage
  const storedUsername = req.query.username || req.body.username || req.body.storedUsername;

  if (storedUsername) {
    res.locals.username = storedUsername;
  }

  next();
});

// Admin routes filter
app.use('/admin', (req, res, next) => {
  console.log('Admin Filter Middleware');
  // You can add admin-specific logic/authentication here if needed
  next();
});

// Route to display the form
app.get('/', (req, res) => {
  const username = res.locals.username;
  res.send(`
    <h1>Welcome${username ? ', ' + username : ''}!</h1>
    <form action="/send-message" method="post">
      <label for="message">Message:</label>
      <input type="text" id="message" name="message" required />
      <button type="submit">Send Message</button>
    </form>
  `);
});

// Route to handle form submission and store messages in a file
app.post('/send-message', (req, res) => {
  const username = res.locals.username;
  const message = req.body.message;

  if (username && message) {
    const data = `${username}: ${message}\n`;

    fs.appendFile('messages.txt', data, (err) => {
      if (err) throw err;
      console.log('Message saved to file');
    });

    res.redirect('/');
  } else {
    res.status(400).send('Invalid request');
  }
});

// Admin route
app.get('/admin/dashboard', (req, res) => {
  res.send('Admin Dashboard');
});

// Shop route using a separate file
app.use('/shop', require('./shop'));

// Page not found handler
app.use((req, res, next) => {
  res.status(404).send('Page not found');
});

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
